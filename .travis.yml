sudo: required
services:
  - docker
language: minimal

env:
  global:
    - dockerfile=.docker/small/Dockerfile
    - PYTHON=python3

jobs:
  allow_failures:
    - stage: debian stretch py2
  include:
    ##################################################
    - stage: build base docker images
      env: BASE=debian_stretch
      script:
        - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
        - docker build -t $DOCKER_USERNAME/gpopup:$BASE -f .docker/$BASE/Dockerfile .
        - docker images
        - docker push $DOCKER_USERNAME/gpopup:$BASE
    - # stage: build base docker images
      env: BASE=debian_buster
      script:
        - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
        - docker build -t $DOCKER_USERNAME/gpopup:$BASE -f .docker/$BASE/Dockerfile .
        - docker images
        - docker push $DOCKER_USERNAME/gpopup:$BASE
    ##################################################
    - stage: debian stretch py3
      env:
        - BASE=debian_stretch
        - TEST=/app/.docker/run_unit_tests.sh
      script:
        - docker build --build-arg DOCKER_USERNAME=$DOCKER_USERNAME --build-arg BASE="$BASE" --build-arg PYTHON=$PYTHON -t "gpopup:$BASE$PYTHON" -f "$dockerfile" .
        - docker run --tty "gpopup:$BASE$PYTHON" $TEST
    - # stage: debian stretch py3
      env:
        - BASE=debian_stretch
        - TEST=/app/.docker/run_examples_test.sh
      script:
        - docker build --build-arg DOCKER_USERNAME=$DOCKER_USERNAME --build-arg BASE="$BASE" --build-arg PYTHON=$PYTHON -t "gpopup:$BASE$PYTHON" -f "$dockerfile" .
        - docker run --tty "gpopup:$BASE$PYTHON" $TEST
    ##################################################
    - stage: debian buster py3
      env:
        - BASE=debian_buster
        - TEST=/app/.docker/run_unit_tests.sh
      script:
        - docker build --build-arg DOCKER_USERNAME=$DOCKER_USERNAME --build-arg BASE="$BASE" --build-arg PYTHON=$PYTHON -t "gpopup:$BASE$PYTHON" -f "$dockerfile" .
        - docker run --tty "gpopup:$BASE$PYTHON" $TEST
    - # stage: debian buster py3
      env:
        - BASE=debian_buster
        - TEST=/app/.docker/run_examples_test.sh
      script:
        - docker build --build-arg DOCKER_USERNAME=$DOCKER_USERNAME --build-arg BASE="$BASE" --build-arg PYTHON=$PYTHON -t "gpopup:$BASE$PYTHON" -f "$dockerfile" .
        - docker run --tty "gpopup:$BASE$PYTHON" $TEST
    ##################################################
    - stage: debian stretch py2
      env:
        - BASE=debian_stretch
        - PYTHON=python2
        - TEST=/app/.docker/run_unit_tests.sh
      script:
        - docker build --build-arg DOCKER_USERNAME=$DOCKER_USERNAME --build-arg BASE="$BASE" --build-arg PYTHON=$PYTHON -t "gpopup:$BASE$PYTHON" -f "$dockerfile" .
        - docker run --tty "gpopup:$BASE$PYTHON" $TEST

notifications:
  email: false
